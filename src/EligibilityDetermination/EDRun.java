/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package EligibilityDetermination;

import DataCollection.ui.DCUnearnedIncome;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.time.Duration;
import java.time.LocalDateTime;
import java.time.Period;
import java.time.ZoneId;
import java.time.format.DateTimeFormatter;
import java.util.Calendar;
import java.util.Date;
import static java.util.Date.from;
import java.util.GregorianCalendar;
import javax.swing.JOptionPane;
import org.jfree.chart.ChartFactory;  
import org.jfree.chart.ChartFrame;
import org.jfree.chart.ChartPanel;  
import org.jfree.chart.JFreeChart;  
import org.jfree.chart.labels.PieSectionLabelGenerator;  
import org.jfree.chart.labels.StandardPieSectionLabelGenerator;  
import org.jfree.chart.plot.PiePlot;  
import org.jfree.chart.plot.PiePlot3D;
import org.jfree.data.general.DefaultPieDataset;  
import org.jfree.data.general.PieDataset;  

/**
 *
 * @author shubhangisrivastava
 */
public class EDRun extends javax.swing.JPanel {

    Connection con = null;
    PreparedStatement pst = null;
    ResultSet rs = null;
    PreparedStatement pst2 = null;
    ResultSet rs2 = null;
    PreparedStatement pst3 = null;
    ResultSet rs3 = null;
    PreparedStatement pst4 = null;
    ResultSet rs4 = null;
    PreparedStatement pst5 = null;
    ResultSet rs5 = null;
    PreparedStatement pst6 = null;
    ResultSet rs6 = null;
    PreparedStatement pst7 = null;
    ResultSet rs7 = null;
     PreparedStatement pst8 = null;
    ResultSet rs8 = null;
    PreparedStatement pst9 = null;
    ResultSet rs9 = null;
    PreparedStatement pst10 = null;
    ResultSet rs10 = null;
     PreparedStatement pst11 = null;
    ResultSet rs11 = null;
     PreparedStatement pst12 = null;
    ResultSet rs12 = null;
     PreparedStatement pst13 = null;
    ResultSet rs13 = null;
    PreparedStatement pst14 = null;
    ResultSet rs14 = null;
    PreparedStatement pst15 = null;
    ResultSet rs15 = null;
      PreparedStatement pst16 = null;
    ResultSet rs16 = null;
    public EDRun() {
        initComponents();
        fetch();
        
    }
    
     public void fetch(){
    try{
        String query = "select * from searchclient order by id desc limit 1;";
        con = (Connection) DriverManager.getConnection("jdbc:mysql://localhost/finalproject", "root", "Kidwainagar@1221");
        pst = con.prepareStatement(query);
        rs = pst.executeQuery();
        if(rs.next()){
        String curr_client = rs.getString("client_id");
        lblClientID1.setText(curr_client);
        }
    }catch(Exception ex){
    JOptionPane.showMessageDialog(this, ex.getMessage());
    }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        lblClientID = new javax.swing.JLabel();
        btnEDRun = new javax.swing.JButton();
        lblRelativeName = new javax.swing.JLabel();
        lblClientID1 = new javax.swing.JLabel();
        txtHEalthCoverage = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(1175, 646));

        jSplitPane1.setBackground(new java.awt.Color(102, 204, 255));
        jSplitPane1.setDividerLocation(145);
        jSplitPane1.setDividerSize(0);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 660, Short.MAX_VALUE)
        );

        jSplitPane1.setLeftComponent(jPanel1);

        jPanel2.setBackground(new java.awt.Color(102, 204, 255));
        jPanel2.setPreferredSize(new java.awt.Dimension(1022, 646));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Eligibility Determination - ED Run");

        jPanel5.setBackground(new java.awt.Color(204, 255, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        lblClientID.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lblClientID.setText("Client ID:");

        btnEDRun.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btnEDRun.setText("Run Eligibility ");
        btnEDRun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEDRunActionPerformed(evt);
            }
        });

        lblRelativeName.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lblRelativeName.setText("Program Requested:");

        lblClientID1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lblClientID1.setText("Client ID:");

        txtHEalthCoverage.setText("Health Care Coverage");
        txtHEalthCoverage.setEnabled(false);
        txtHEalthCoverage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtHEalthCoverageActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap(35, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblClientID, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblRelativeName, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(69, 69, 69)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtHEalthCoverage, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblClientID1, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addComponent(btnEDRun, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(159, 159, 159))))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(45, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblClientID)
                    .addComponent(lblClientID1))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblRelativeName)
                    .addComponent(txtHEalthCoverage, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addComponent(btnEDRun)
                .addGap(49, 49, 49))
        );

        jButton1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 624, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(126, 126, 126)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1)
                            .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(347, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addContainerGap(287, Short.MAX_VALUE))
        );

        jSplitPane1.setRightComponent(jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jSplitPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 664, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnEDRunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEDRunActionPerformed
    try{
                String elig;
                String income;
                int client_id;
                Date start_date = new Date();
                Date end_date  = new Date();
                int days_left;
                String status;
                
                //code for aca starts here
                DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy/MM/dd HH:mm:ss");
                LocalDateTime now = LocalDateTime.now();
                 SimpleDateFormat Date_Format = new SimpleDateFormat("yyyy-MM-dd");
                int id = Integer.parseInt(lblClientID1.getText());
                String aca = "select *,TIMESTAMPDIFF(year,dob,CURDATE()) as age from person p inner join living_arrangement lm on p.client_id = lm.client_id inner join person_demo pd on p.client_id = pd.client_id WHERE NOT EXISTS(select * from medicare where medicare.client_id = p.client_id) AND NOT EXISTS(select * from disability where disability.client_id = p.client_id) AND NOT EXISTS(select * from pregnancy where pregnancy.client_id = p.client_id) AND NOT EXISTS(select * from cwd where cwd.client_id = p.client_id) AND NOT EXISTS(select * from earned_income where earned_income.client_id = p.client_id) AND NOT EXISTS(select * from unearned_income where unearned_income.client_id = p.client_id)having age> 17 and p.client_id=?";
                String rel = "select * from relationship where client_id=?";
                con = (Connection) DriverManager.getConnection("jdbc:mysql://localhost/finalproject", "root", "Kidwainagar@1221");
                pst = con.prepareStatement(aca);
                pst2 = con.prepareStatement(rel);
                pst.setInt(1, id);  
                pst2.setInt(1, id);  
                rs =pst.executeQuery();
                rs2 =pst2.executeQuery();
                if(rs.next() == true){
                    if(rs2.next() == true){
                         elig = "ACA";
                         income = "$1000";
                         client_id = id;
                         Calendar calendar = new GregorianCalendar(/* remember about timezone! */);
                calendar.setTime(start_date);
                calendar.add(Calendar.DATE, 90);
                end_date = calendar.getTime();
                         status="Eligible";
                         
                String eligi = "INSERT into eligibility " + " (client_id,elig,income,start_date,end_date,status)" + " values (?, ?, ?, ?, ?, ?)";
                pst3 = con.prepareStatement(eligi);
                pst3.setInt(1, client_id);
                pst3.setString(2, elig);
                pst3.setString(3, income);
                pst3.setString(4,Date_Format.format(start_date));
                pst3.setString(5,Date_Format.format(end_date));
                //pst3.setInt(6, 1);
                pst3.setString(6, status);
                pst3.executeUpdate();
                         
                    }
                    else{
                        JOptionPane.showMessageDialog(this, "hiiii");
                    elig = "ACA";
                         income = "$800";
                         client_id = id;
                           Calendar calendar = new GregorianCalendar(/* remember about timezone! */);
                calendar.setTime(start_date);
                calendar.add(Calendar.DATE, 90);
                end_date = calendar.getTime();
                         status="Eligible";
                          String eligi = "INSERT into eligibility " + " (client_id,elig,income,start_date,end_date,status)" + " values (?, ?, ?, ?, ?, ?)";
                pst3 = con.prepareStatement(eligi);
                pst3.setInt(1, client_id);
                pst3.setString(2, elig);
                pst3.setString(3, income);
                pst3.setString(4,Date_Format.format(start_date));
                pst3.setString(5,Date_Format.format(end_date));
                pst3.setString(6, status);
                pst3.executeUpdate();
                    }
                }
             
                //code for abd blind check yes starts here
            String aca2 = "select *,TIMESTAMPDIFF(year,dob,CURDATE()) as age from person p inner join living_arrangement lm on p.client_id = lm.client_id  inner join person_demo pd on p.client_id = pd.client_id  inner join disability d on p.client_id = d.client_id  WHERE NOT EXISTS(select * from medicare where medicare.client_id = p.client_id) AND NOT EXISTS(select * from pregnancy where pregnancy.client_id = p.client_id) AND NOT EXISTS(select * from cwd where cwd.client_id = p.client_id) AND NOT EXISTS(select * from earned_income where earned_income.client_id = p.client_id)  AND NOT EXISTS(select * from unearned_income where unearned_income.client_id = p.client_id) having age > 18  and d.is_blind ='Yes' and p.client_id=?";
            String rel2 = "select * from relationship where client_id=?";
                con = (Connection) DriverManager.getConnection("jdbc:mysql://localhost/finalproject", "root", "Kidwainagar@1221");
                pst4 = con.prepareStatement(aca2);
                pst5 = con.prepareStatement(rel2);
                pst4.setInt(1, id);  
                pst5.setInt(1, id);  
                rs3 =pst4.executeQuery();
                rs4 =pst5.executeQuery();
                if(rs3.next() == true){
                    if(rs4.next() == true){
                         elig = "ABD Blind";
                         income = "$1000";
                         client_id = id;
                         Calendar calendar = new GregorianCalendar(/* remember about timezone! */);
                calendar.setTime(start_date);
                calendar.add(Calendar.DATE, 90);
                end_date = calendar.getTime();
                         status="Eligible";
                         
                String eligi = "INSERT into eligibility " + " (client_id,elig,income,start_date,end_date,status)" + " values (?, ?, ?, ?, ?, ?)";
                pst3 = con.prepareStatement(eligi);
                pst3.setInt(1, client_id);
                pst3.setString(2, elig);
                pst3.setString(3, income);
                pst3.setString(4,Date_Format.format(start_date));
                pst3.setString(5,Date_Format.format(end_date));
                //pst3.setInt(6, 1);
                pst3.setString(6, status);
                pst3.executeUpdate();
                         
                    }
                    else{
                        JOptionPane.showMessageDialog(this, "hiiii");
                    elig = "ABD Blind";
                         income = "$800";
                         client_id = id;
                           Calendar calendar = new GregorianCalendar(/* remember about timezone! */);
                calendar.setTime(start_date);
                calendar.add(Calendar.DATE, 90);
                end_date = calendar.getTime();
                         status="Eligible";
                          String eligi = "INSERT into eligibility " + " (client_id,elig,income,start_date,end_date,status)" + " values (?, ?, ?, ?, ?, ?)";
                pst3 = con.prepareStatement(eligi);
                pst3.setInt(1, client_id);
                pst3.setString(2, elig);
                pst3.setString(3, income);
                pst3.setString(4,Date_Format.format(start_date));
                pst3.setString(5,Date_Format.format(end_date));
                pst3.setString(6, status);
                pst3.executeUpdate();
                    }
                }
              
                //code for abd no blind starts here
             String aca3 = "select *,TIMESTAMPDIFF(year,dob,CURDATE()) as age from person p inner join living_arrangement lm on p.client_id = lm.client_id  inner join person_demo pd on p.client_id = pd.client_id  inner join disability d on p.client_id = d.client_id  WHERE NOT EXISTS(select * from medicare where medicare.client_id = p.client_id) AND NOT EXISTS(select * from pregnancy where pregnancy.client_id = p.client_id) AND NOT EXISTS(select * from cwd where cwd.client_id = p.client_id) AND NOT EXISTS(select * from earned_income where earned_income.client_id = p.client_id)  AND NOT EXISTS(select * from unearned_income where unearned_income.client_id = p.client_id) having age > 18  and d.is_blind ='No' and p.client_id=?";
            String rel3 = "select * from relationship where client_id=?";
                con = (Connection) DriverManager.getConnection("jdbc:mysql://localhost/finalproject", "root", "Kidwainagar@1221");
                pst6 = con.prepareStatement(aca3);
                pst7 = con.prepareStatement(rel3);
                pst6.setInt(1, id);  
                pst7.setInt(1, id);  
                rs5 =pst6.executeQuery();
                rs6 =pst7.executeQuery();
                if(rs5.next() == true){
                    if(rs6.next() == true){
                         elig = "ABD";
                         income = "$1000";
                         client_id = id;
                         Calendar calendar = new GregorianCalendar(/* remember about timezone! */);
                calendar.setTime(start_date);
                calendar.add(Calendar.DATE, 90);
                end_date = calendar.getTime();
                         status="Eligible";
                         
                String eligi = "INSERT into eligibility " + " (client_id,elig,income,start_date,end_date,status)" + " values (?, ?, ?, ?, ?, ?)";
                pst3 = con.prepareStatement(eligi);
                pst3.setInt(1, client_id);
                pst3.setString(2, elig);
                pst3.setString(3, income);
                pst3.setString(4,Date_Format.format(start_date));
                pst3.setString(5,Date_Format.format(end_date));
                //pst3.setInt(6, 1);
                pst3.setString(6, status);
                pst3.executeUpdate();
                         
                    }else{
                        JOptionPane.showMessageDialog(this, "hiiii");
                    elig = "ABD";
                         income = "$800";
                         client_id = id;
                           Calendar calendar = new GregorianCalendar(/* remember about timezone! */);
                calendar.setTime(start_date);
                calendar.add(Calendar.DATE, 90);
                end_date = calendar.getTime();
                         status="Eligible";
                          String eligi = "INSERT into eligibility " + " (client_id,elig,income,start_date,end_date,status)" + " values (?, ?, ?, ?, ?, ?)";
                pst3 = con.prepareStatement(eligi);
                pst3.setInt(1, client_id);
                pst3.setString(2, elig);
                pst3.setString(3, income);
                pst3.setString(4,Date_Format.format(start_date));
                pst3.setString(5,Date_Format.format(end_date));
                pst3.setString(6, status);
                pst3.executeUpdate();
                    }
                }
                //code for pregnancy starts here
                String aca4 ="select *,TIMESTAMPDIFF(year,dob,CURDATE()) as age from person p inner join living_arrangement lm on p.client_id = lm.client_id inner join person_demo pd on p.client_id = pd.client_id inner join pregnancy preg on p.client_id = preg.client_id WHERE NOT EXISTS(select * from medicare where medicare.client_id = p.client_id) AND NOT EXISTS(select * from disability where disability.client_id = p.client_id) AND NOT EXISTS(select * from cwd where cwd.client_id = p.client_id) AND NOT EXISTS(select * from earned_income where earned_income.client_id = p.client_id)  AND NOT EXISTS(select * from unearned_income where unearned_income.client_id = p.client_id) having age > 18 and p.client_id=?";
                con = (Connection) DriverManager.getConnection("jdbc:mysql://localhost/finalproject", "root", "Kidwainagar@1221");
                pst8 = con.prepareStatement(aca4);
                pst8.setInt(1, id); 
                rs8 = pst8.executeQuery();
                if(rs8.next() == true){
                    JOptionPane.showMessageDialog(this, "Pregnant");
                         elig = "ACAPR";
                         income = "$600";
                         client_id = id;
                         Calendar calendar = new GregorianCalendar(/* remember about timezone! */);
                calendar.setTime(start_date);
                calendar.add(Calendar.DATE, 90);
                end_date = calendar.getTime();
                         status="Eligible";
                
                
                String eligi = "INSERT into eligibility " + " (client_id,elig,income,start_date,end_date,status)" + " values (?, ?, ?, ?, ?, ?)";
                pst3 = con.prepareStatement(eligi);
                pst3.setInt(1, client_id);
                pst3.setString(2, elig);
                pst3.setString(3, income);
                pst3.setString(4,Date_Format.format(start_date));
                pst3.setString(5,Date_Format.format(end_date));
                //pst3.setInt(6, 1);
                pst3.setString(6, status);
                pst3.executeUpdate();
                }   
                
                
                //code for cwd starts here
                String cwd = " select *,TIMESTAMPDIFF(year,dob,CURDATE()) as age from person p inner join living_arrangement lm on p.client_id = lm.client_id inner join person_demo pd on p.client_id = pd.client_id inner join cwd ccwd on p.client_id = ccwd.client_id WHERE NOT EXISTS(select * from medicare where medicare.client_id = p.client_id) AND NOT EXISTS(select * from pregnancy where pregnancy.client_id = p.client_id) AND NOT EXISTS(select * from disability where disability.client_id = p.client_id) AND NOT EXISTS(select * from earned_income where earned_income.client_id = p.client_id)AND NOT EXISTS(select * from unearned_income where unearned_income.client_id = p.client_id)having age < 18 and ccwd.cwd = 'yes' and ccwd.wwd = 'no' and  p.client_id=?;";
                con = (Connection) DriverManager.getConnection("jdbc:mysql://localhost/finalproject", "root", "Kidwainagar@1221");
                pst9 = con.prepareStatement(cwd);
                pst9.setInt(1, id); 
                rs9 = pst9.executeQuery();
                if(rs9.next() == true){
                    JOptionPane.showMessageDialog(this, "Child with Disability");
                         elig = "CWD";
                         income = "$900";
                         client_id = id;
                         Calendar calendar = new GregorianCalendar(/* remember about timezone! */);
                calendar.setTime(start_date);
                calendar.add(Calendar.DATE, 90);
                end_date = calendar.getTime();
                         status="Eligible";
                
                
                String eligi = "INSERT into eligibility " + " (client_id,elig,income,start_date,end_date,status)" + " values (?, ?, ?, ?, ?, ?)";
                pst3 = con.prepareStatement(eligi);
                pst3.setInt(1, client_id);
                pst3.setString(2, elig);
                pst3.setString(3, income);
                pst3.setString(4,Date_Format.format(start_date));
                pst3.setString(5,Date_Format.format(end_date));
                //pst3.setInt(6, 1);
                pst3.setString(6, status);
                pst3.executeUpdate();
                }
                
                //code for wwd starts here
                 String wwd = " select *,TIMESTAMPDIFF(year,dob,CURDATE()) as age from person p inner join living_arrangement lm on p.client_id = lm.client_id inner join person_demo pd on p.client_id = pd.client_id inner join cwd ccwd on p.client_id = ccwd.client_id inner join earned_income ei on p.client_id = ei.client_id WHERE NOT EXISTS(select * from medicare where medicare.client_id = p.client_id) AND NOT EXISTS(select * from pregnancy where pregnancy.client_id = p.client_id) AND NOT EXISTS(select * from disability where disability.client_id = p.client_id)AND NOT EXISTS(select * from unearned_income where unearned_income.client_id = p.client_id)having age > 18 and ccwd.wwd = 'yes' and ccwd.cwd = 'no' and  p.client_id=?;";
                con = (Connection) DriverManager.getConnection("jdbc:mysql://localhost/finalproject", "root", "Kidwainagar@1221");
                pst10 = con.prepareStatement(wwd);
                pst10.setInt(1, id); 
                rs10 = pst10.executeQuery();
                if(rs10.next() == true){
                    JOptionPane.showMessageDialog(this, "Worker with Disability");
                         elig = "WWD";
                         income = "$800";
                         client_id = id;
                         Calendar calendar = new GregorianCalendar(/* remember about timezone! */);
                calendar.setTime(start_date);
                calendar.add(Calendar.DATE, 90);
                end_date = calendar.getTime();
                         status="Eligible";
                
                
                String eligi = "INSERT into eligibility " + " (client_id,elig,income,start_date,end_date,status)" + " values (?, ?, ?, ?, ?, ?)";
                pst3 = con.prepareStatement(eligi);
                pst3.setInt(1, client_id);
                pst3.setString(2, elig);
                pst3.setString(3, income);
                pst3.setString(4,Date_Format.format(start_date));
                pst3.setString(5,Date_Format.format(end_date));
                //pst3.setInt(6, 1);
                pst3.setString(6, status);
                pst3.executeUpdate();
                } 
                
                
                //code for medicare a starts here
                 String medA = "  select *,TIMESTAMPDIFF(year,dob,CURDATE()) as age from person p  inner join living_arrangement lm on p.client_id = lm.client_id  inner join person_demo pd on p.client_id = pd.client_id  inner join medicare med on p.client_id = med.client_id AND NOT EXISTS(select * from pregnancy where pregnancy.client_id = p.client_id) AND NOT EXISTS(select * from cwd where cwd.client_id = p.client_id)AND NOT EXISTS(select * from disability where disability.client_id = p.client_id)AND NOT EXISTS(select * from earned_income where earned_income.client_id = p.client_id) AND NOT EXISTS(select * from unearned_income where unearned_income.client_id = p.client_id)having age > 18 and med.medicare_a = 'Yes' and med.medicare_b = 'No' and med.medicare_both = 'No' and  p.client_id=?;";
                con = (Connection) DriverManager.getConnection("jdbc:mysql://localhost/finalproject", "root", "Kidwainagar@1221");
                pst11 = con.prepareStatement(medA);
                pst11.setInt(1, id); 
                rs11 = pst11.executeQuery();
                if(rs11.next() == true){
                    JOptionPane.showMessageDialog(this, "Medicare Part A");
                         elig = "Medicare";
                         income = "$300";
                         client_id = id;
                         Calendar calendar = new GregorianCalendar(/* remember about timezone! */);
                calendar.setTime(start_date);
                calendar.add(Calendar.DATE, 90);
                end_date = calendar.getTime();
                         status="Eligible";
                
                
                String eligi = "INSERT into eligibility " + " (client_id,elig,income,start_date,end_date,status)" + " values (?, ?, ?, ?, ?, ?)";
                pst3 = con.prepareStatement(eligi);
                pst3.setInt(1, client_id);
                pst3.setString(2, elig);
                pst3.setString(3, income);
                pst3.setString(4,Date_Format.format(start_date));
                pst3.setString(5,Date_Format.format(end_date));
                //pst3.setInt(6, 1);
                pst3.setString(6, status);
                pst3.executeUpdate();
                } 
                
                //code for medicare b starts here
                 String medB = "  select *,TIMESTAMPDIFF(year,dob,CURDATE()) as age from person p  inner join living_arrangement lm on p.client_id = lm.client_id  inner join person_demo pd on p.client_id = pd.client_id  inner join medicare med on p.client_id = med.client_id AND NOT EXISTS(select * from pregnancy where pregnancy.client_id = p.client_id) AND NOT EXISTS(select * from cwd where cwd.client_id = p.client_id)AND NOT EXISTS(select * from disability where disability.client_id = p.client_id)AND NOT EXISTS(select * from earned_income where earned_income.client_id = p.client_id) AND NOT EXISTS(select * from unearned_income where unearned_income.client_id = p.client_id)having age > 18 and med.medicare_a = 'No' and med.medicare_b = 'Yes' and med.medicare_both = 'No' and  p.client_id=?;";
                con = (Connection) DriverManager.getConnection("jdbc:mysql://localhost/finalproject", "root", "Kidwainagar@1221");
                pst12 = con.prepareStatement(medB);
                pst12.setInt(1, id); 
                rs12 = pst12.executeQuery();
                if(rs12.next() == true){
                    JOptionPane.showMessageDialog(this, "Medicare Part B");
                         elig = "QMB";
                         income = "$400";
                         client_id = id;
                         Calendar calendar = new GregorianCalendar(/* remember about timezone! */);
                calendar.setTime(start_date);
                calendar.add(Calendar.DATE, 90);
                end_date = calendar.getTime();
                         status="Eligible";
                
                
                String eligi = "INSERT into eligibility " + " (client_id,elig,income,start_date,end_date,status)" + " values (?, ?, ?, ?, ?, ?)";
                pst3 = con.prepareStatement(eligi);
                pst3.setInt(1, client_id);
                pst3.setString(2, elig);
                pst3.setString(3, income);
                pst3.setString(4,Date_Format.format(start_date));
                pst3.setString(5,Date_Format.format(end_date));
                //pst3.setInt(6, 1);
                pst3.setString(6, status);
                pst3.executeUpdate();
                } 
                
                
                //code for medicare both starts here:
                String medBoth = "  select *,TIMESTAMPDIFF(year,dob,CURDATE()) as age from person p  inner join living_arrangement lm on p.client_id = lm.client_id  inner join person_demo pd on p.client_id = pd.client_id  inner join medicare med on p.client_id = med.client_id AND NOT EXISTS(select * from pregnancy where pregnancy.client_id = p.client_id) AND NOT EXISTS(select * from cwd where cwd.client_id = p.client_id)AND NOT EXISTS(select * from disability where disability.client_id = p.client_id)AND NOT EXISTS(select * from earned_income where earned_income.client_id = p.client_id) AND NOT EXISTS(select * from unearned_income where unearned_income.client_id = p.client_id)having age > 18 and med.medicare_a = 'No' and med.medicare_b = 'No' and med.medicare_both = 'Yes' and  p.client_id=?;";
                con = (Connection) DriverManager.getConnection("jdbc:mysql://localhost/finalproject", "root", "Kidwainagar@1221");
                pst13 = con.prepareStatement(medBoth);
                pst13.setInt(1, id); 
                rs13 = pst13.executeQuery();
                if(rs13.next() == true){
                    JOptionPane.showMessageDialog(this, "Medicare Part Both");
                         elig = "SLMB";
                         income = "$500";
                         client_id = id;
                         Calendar calendar = new GregorianCalendar(/* remember about timezone! */);
                calendar.setTime(start_date);
                calendar.add(Calendar.DATE, 90);
                end_date = calendar.getTime();
                         status="Eligible";
                
                
                String eligi = "INSERT into eligibility " + " (client_id,elig,income,start_date,end_date,status)" + " values (?, ?, ?, ?, ?, ?)";
                pst3 = con.prepareStatement(eligi);
                pst3.setInt(1, client_id);
                pst3.setString(2, elig);
                pst3.setString(3, income);
                pst3.setString(4,Date_Format.format(start_date));
                pst3.setString(5,Date_Format.format(end_date));
                //pst3.setInt(6, 1);
                pst3.setString(6, status);
                pst3.executeUpdate();
                }            
        } catch(Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
        EDDetermination det = new EDDetermination();
         jSplitPane1.setRightComponent(det);
    }//GEN-LAST:event_btnEDRunActionPerformed


    
    private void txtHEalthCoverageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtHEalthCoverageActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtHEalthCoverageActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
DCUnearnedIncome du = new DCUnearnedIncome();
        jSplitPane1.setRightComponent(du);
//        int aca_count = 0;
//        int abdblind_count = 0;
//         DefaultPieDataset dataset = new DefaultPieDataset();
//         try{
//         
//         
//        String query = "select * from searchclient order by id desc limit 1;";
//        con = (Connection) DriverManager.getConnection("jdbc:mysql://localhost/finalproject", "root", "Kidwainagar@1221");
//        pst16 = con.prepareStatement(query);
//        rs16 = pst16.executeQuery();
//        if(rs16.next()){
//        String curr_client = rs16.getString("client_id");
//        lblClientID1.setText(curr_client);
//        }
//    
//        
//        String query2 = "select count(*) as count from eligibility where elig='ACA';";
//        JOptionPane.showMessageDialog(this,  "h1" );
//       // con = (Connection) DriverManager.getConnection("jdbc:mysql://localhost/finalproject", "root", "Kidwainagar@1221");
//        pst14 = con.prepareStatement(query2);
//          JOptionPane.showMessageDialog(this,  "h2" );
//          JOptionPane.showMessageDialog(this,  "h3" );
//        rs14 = pst14.executeQuery();
//                  JOptionPane.showMessageDialog(this,  "h4" );
//        if(rs14.next()){
//            JOptionPane.showMessageDialog(this,  "h5" );
//            aca_count = rs14.getInt("count");
//            JOptionPane.showMessageDialog(this,  "h6" );
//             dataset.setValue("ACA",aca_count);
//             JOptionPane.showMessageDialog(this,  "h7" );
//             JOptionPane.showMessageDialog(this,  aca_count );
//             JOptionPane.showMessageDialog(this,  "h8" );
//        }
//        
//         
//        String query3 = "select count(*) as count from eligibility where elig='ABD Blind';";
//        JOptionPane.showMessageDialog(this,  "h9" );
//       // con = (Connection) DriverManager.getConnection("jdbc:mysql://localhost/finalproject", "root", "Kidwainagar@1221");
//        pst15= con.prepareStatement(query3);
//         JOptionPane.showMessageDialog(this,  "h10" );
//         JOptionPane.showMessageDialog(this,  "h11" );
//        rs15 = pst15.executeQuery();
//        JOptionPane.showMessageDialog(this,  "h12" );
//        if(rs15.next()){
//             JOptionPane.showMessageDialog(this,  "h13" );
//            abdblind_count = rs15.getInt("count");
//             JOptionPane.showMessageDialog(this,  "h14" );
//             dataset.setValue("ABD Blind",abdblind_count);
//              JOptionPane.showMessageDialog(this,  "h15" );
//             JOptionPane.showMessageDialog(this,  aca_count );
//              JOptionPane.showMessageDialog(this,  "h16" );
//        }
//        
//    }catch(Exception ex){
//    JOptionPane.showMessageDialog(this, ex.getMessage());
//    }
//         JOptionPane.showMessageDialog(this,  "h17" );
//         JFreeChart chart = ChartFactory.createPieChart3D("Pie Chart",dataset,true,true,true);
//         JOptionPane.showMessageDialog(this,  "h18" );
//         PiePlot p = (PiePlot)chart.getPlot();
//         p.setForegroundAlpha(TOP_ALIGNMENT);
//         JOptionPane.showMessageDialog(this,  "h19" );
//         ChartFrame frame = new ChartFrame("Pie Chart",chart);
//         JOptionPane.showMessageDialog(this,  "h20" );
//         frame.setVisible(true);
//         JOptionPane.showMessageDialog(this,  "h21" );
//         frame.setSize(500,600);
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEDRun;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JLabel lblClientID;
    private javax.swing.JLabel lblClientID1;
    private javax.swing.JLabel lblRelativeName;
    private javax.swing.JTextField txtHEalthCoverage;
    // End of variables declaration//GEN-END:variables
}
